#include<bits/stdc++.h>
using namespace std;

// Input macros
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       getline(cin,n); //scanf("%s",n) //cin.ignore

#define fi first
#define se second
#define INF 0x3f3f3f3f
#define pb push_back
typedef long long int ll; 
typedef pair<int,int> ii;
#define size5 100010
#define size9 1000000010

#define For(i,b)                  	for(int i=0;i<b;i++)
#define FoR(i,a,b)                  for(int i=a;i>=b;i--)
#define FOR(i,a,b)                  for(int i=a;i<b;i++)
#define foreach(v, c)               for( auto v:c)
#define nested(i,a,b,j,c,d)         for(int i=a;i<b;i++){ for(int j=c;j<d;j++)
//#define foreach(v, c)             for( auto v = (c).begin();  v != (c).end(); ++v)
#define min3(a,b,c)					min(a,min(b,c))
#define min4(a,b,c,d)				min(min(a,b),min(c,d))
#define all(a)                      a.begin(), a.end()
#define fill(a,v)                   memset(a, v, sizeof a)

typedef pair<int,int> 				ii;
typedef vector<int> 				vi; 
typedef vector<bool> 				vb;
typedef vector<vi> 					vvi; 
typedef vector<ii> 					vp;
typedef unordered_map<int,int> 		u_map_ii;
typedef unordered_map<char,int> 	u_map_ci;
typedef unordered_set<int,int> 		u_set_ii;
typedef unordered_set<char,int> 	u_set_ci;

#define pq_max 						priority_queue<int>
#define pq_min 						priority_queue<int,vector<int>,greater<int>>

#define whileNE(x) 					while(!x.empty())
#define present(c,x) 				((c).find(x) != (c).end()) 
#define mp make_pair

// directions
const int fx[4][2] = 				{{0,1}, {0,-1}, {1,0}, {-1,0}};
const int fxx[8][2] = 				{{0,1}, {0,-1}, {1,0}, {-1,0}, {1,1}, {1,-1}, {-1,1}, {-1,-1}};

// Some common useful functions
#define maX                    		INF
#define miN                     	INT_MIN
#define checkbit(n,b)               ( (n >> b) & 1)
#define INDEX(arr,ind)              (lower_bound(all(arr),ind)-arr.begin())

#define TCase 						int T; cin>>T; while(T--) // the same as above
#define REMAX(a,b) 					(a)=max((a),(b)) // set a to the maximum of a and b
#define REMIN(a,b) 					(a)=min((a),(b));
#define PI 							3.1415926535897932384626
#define MOD 						1000000007
#define SIZE(a)      				(int)(a.size())
#define LEN(a)       				(int)(a.length())

#define print(x) 					cout<<x;
#define print2(x,y) 				cout<<x<<" "<<y;
#define println(x) 					cout<<x<<'\n';
#define printA(arr,length) 			for(int i=0;i<length;i++) cout<<arr[i]<<" "; cout<<'\n';
#define printAB(arr,start,length) 	for(int i=start;i<length;i++) cout<<arr[i]<<" "; cout<<'\n';

#define debug(x)                	cerr << #x << ": " << x << endl;
#define debug2(x, y)             	cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define fast_io 					ios_base::sync_with_stdio(false);cin.tie(NULL);
#define sublimeProblem				freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);

int runs[size5*10+10];
int wickets[size5*10+10];
int N;

ll merge(int *arr,ll start,ll middle,ll end){
	ll length=end-start+1, a=start, b=middle+1, k=0, count=0;
	int temp[length];
	while(a<=middle && b<=end){
		if(arr[a]>arr[b]){
			count+=middle-a+1;
			temp[k++]=arr[b++];
		}
		else
			temp[k++]=arr[a++];
	}
	while(a<=middle)
		temp[k++]=arr[a++];
	while(b<=end)
		temp[k++]=arr[b++];

	k=0;
	FOR(i,start,end+1)
		arr[i]=temp[k++];
	return count;
}

ll f(int *arr,int start,int end){
	if(start==end)
		return 0;

	ll l,r,c,mid;
	mid=(start+end)/2;

	l=f(arr,start,mid);
	r=f(arr,mid+1,end);
	c=merge(arr,start,mid,end);
	
	return l+r+c;
}

long long solve(int A[], int n)
{
	return f(A,0,n-1);
}
